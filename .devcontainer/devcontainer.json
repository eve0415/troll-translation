{
  "name": "Troll Translation",
  "build": {
    "dockerfile": "Dockerfile"
  },
  "features": {
    "ghcr.io/devcontainers/features/github-cli:1": {}
  },
  "postCreateCommand": "git config --local core.ignorecase false",
  "postStartCommand": "npm install -g @openai/codex @google/gemini-cli && pnpm install --frozen-lockfile && pnpx playwright install --with-deps",
  "containerEnv": {
    "TZ": "Asia/Tokyo"
  },
  "mounts": [
    "type=bind,source=${localEnv:HOME}/.gemini,target=/home/node/.gemini,type=bind,consistency=cached",
    "type=bind,source=${localEnv:HOME}/.codex,target=/home/node/.codex,type=bind,consistency=cached"
  ],
  "customizations": {
    "vscode": {
      "extensions": [
        "biomejs.biome",
        "dbaeumer.vscode-eslint",
        "ms-azuretools.vscode-docker",
        "github.vscode-github-actions",
        "bradlc.vscode-tailwindcss",
        "EditorConfig.EditorConfig",
        "Anthropic.claude-code",
        "GitHub.vscode-pull-request-github",
        "google.gemini-cli-vscode-ide-companion",
        "openai.chatgpt",
        "tamasfe.even-better-toml"
      ],
      "settings": {
        "diffEditor.experimental.showMoves": true,
        "editor.formatOnSave": true,
        "editor.formatOnType": true,
        "editor.formatOnPaste": true,
        "editor.codeActionsOnSave": {
          "quickfix.biome": "always",
          "source.addMissingImports": "always",
          "source.fixAll": "always",
          "source.fixAll.eslint": "always",
          "source.fixAll.biome": "always",
          "source.organizeImports": "never",
          "source.organizeImports.biome": "always"
        },
        "editor.cursorBlinking": "smooth",
        "editor.cursorSmoothCaretAnimation": "on",
        "editor.defaultFormatter": "biomejs.biome",
        "editor.linkedEditing": true,
        "editor.pasteAs.preferences": ["text.updateImports.jsts"],
        "editor.quickSuggestions": {
          "strings": "on"
        },
        "editor.smoothScrolling": true,
        "editor.tabSize": 2,
        "files.associations": {
          ".env*": "dotenv",
          ".dev.vars": "dotenv",
          "*.css": "tailwindcss"
        },
        "files.insertFinalNewline": true,
        "files.eol": "\n",
        "files.readonlyInclude": {
          "pnpm-lock.yaml": true,
          "**/worker-configuration.d.ts": true,
          "**/routeTree.gen.ts": true,
          "**/tanstack-start.d.ts": true
        },
        "files.trimFinalNewlines": true,
        "files.trimTrailingWhitespace": true,
        "files.watcherExclude": {
          "**/.vite-inspect": true,
          "**/.wrangler": true,
          "**/worker-configuration.d.ts": true,
          "**/routeTree.gen.ts": true,
          "**/.tanstack": true,
          "**/tanstack-start.d.ts": true,
          "**/tsconfig.*.tsbuildinfo": true,
          "**/dist": true
        },
        "javascript.updateImportsOnPaste.enabled": true,
        "search.exclude": {
          "pnpm-lock.yaml": true,
          "**/.vite-inspect": true,
          "**/.wrangler": true,
          "**/worker-configuration.d.ts": true,
          "**/routeTree.gen.ts": true,
          "**/.tanstack": true,
          "**/tanstack-start.d.ts": true,
          "**/tsconfig.*.tsbuildinfo": true,
          "**/dist": true
        },
        "tailwindCSS.classAttributes": ["className", ".*Styles"],
        "tailwindCSS.experimental.classRegex": [
          ["cva\\(((?:[^()]|\\([^()]*\\))*)\\)", "[\"'`]([^\"'`]*).*?[\"'`]"],
          ["cx\\(((?:[^()]|\\([^()]*\\))*)\\)", "(?:'|\"|`)([^']*)(?:'|\"|`)"],
          ["cva\\(([^;]*)[\\);]", "[`'\"`]([^'\"`;]*)[`'\"`]"]
        ],
        "terminal.integrated.defaultProfile.linux": "zsh",
        "terminal.integrated.profiles.linux": {
          "zsh": {
            "path": "/bin/zsh"
          }
        },
        "typescript.inlayHints.functionLikeReturnTypes.enabled": true,
        "typescript.inlayHints.parameterNames.enabled": "all",
        "typescript.inlayHints.parameterTypes.enabled": true,
        "typescript.inlayHints.variableTypes.enabled": true,
        "typescript.preferences.autoImportFileExcludePatterns": ["@radix-ui.*"],
        "typescript.preferences.preferTypeOnlyAutoImports": true,
        "typescript.tsdk": "node_modules/typescript/lib",
        "typescript.tsserver.watchOptions": {
          "fallbackPolling": "dynamicPriorityPolling",
          "watchFile": "useFsEvents",
          "synchronousWatchDirectory": true,
          "excludeDirectories": ["**/node_modules/**/*"]
        },
        "workbench.editor.customLabels.patterns": {
          "**/app/**/page.tsx": "${dirname} - Page",
          "**/app/**/layout.tsx": "${dirname} - Layout",
          "**/app/**/index.css": "${dirname} - CSS",
          "**/app/**/index.module.css": "${dirname} - CSS",
          "**/components/**/index.tsx": "${dirname} - Component",
          "**/components/**/index.css": "${dirname} - CSS",
          "**/components/**/index.module.css": "${dirname} - CSS"
        },
        "[css]": {
          "editor.defaultFormatter": "bradlc.vscode-tailwindcss"
        },
        "[javascript]": {
          "editor.defaultFormatter": "biomejs.biome"
        },
        "[typescript]": {
          "editor.defaultFormatter": "biomejs.biome"
        },
        "[typescriptreact]": {
          "editor.defaultFormatter": "biomejs.biome"
        },
        "[json]": {
          "editor.defaultFormatter": "biomejs.biome"
        },
        "[jsonc]": {
          "editor.defaultFormatter": "biomejs.biome"
        },
        "[markdown]": {
          "diffEditor.ignoreTrimWhitespace": false,
          "editor.quickSuggestions": {
            "comments": "off",
            "strings": "off",
            "other": "off"
          },
          "editor.tabSize": 4,
          "editor.unicodeHighlight.ambiguousCharacters": false,
          "editor.unicodeHighlight.invisibleCharacters": false,
          "editor.wordWrap": "on"
        }
      },
      "mcp": {
        "servers": {
          "serena": {
            "type": "stdio",
            "command": "uvx",
            "args": [
              "--from",
              "git+https://github.com/oraios/serena",
              "serena",
              "start-mcp-server",
              "--context",
              "ide-assistant",
              "--project",
              "/workspace",
              "--enable-web-dashboard",
              "false"
            ],
            "env": {}
          },
          "github": {
            "type": "http",
            "url": "https://api.githubcopilot.com/mcp/"
          },
          "playwright": {
            "type": "stdio",
            "command": "pnpx",
            "args": ["@playwright/mcp@latest", "--browser=webkit"]
          }
        }
      }
    }
  }
}
